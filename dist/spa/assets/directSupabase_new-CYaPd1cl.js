const T=async(i,o,c,a,l)=>{var f,p,d;console.log("Attempting customer profile update",{customerId:a,updateData:l,hasAccessToken:!!c});try{console.log("Trying Edge Function approach...");const e=await fetch(`${i}/functions/v1/update-customer-profile`,{method:"POST",headers:{apikey:o,Authorization:`Bearer ${c||o}`,"Content-Type":"application/json"},body:JSON.stringify({user_id:a,...l})}),t=await e.text();if(console.log("Edge Function response",{status:e.status,statusText:e.statusText,responseText:t,ok:e.ok}),!e.ok){let s;try{const r=JSON.parse(t);s=r.error||r.message||t}catch{s=t||`HTTP ${e.status} - ${e.statusText}`}throw e.status===401?new Error("Authentication failed. Please sign in again."):e.status===409?new Error(`Database conflict occurred: ${s}. Please try again or contact support.`):new Error(`Failed to update customer profile: ${s}`)}console.log("Successfully updated customer profile via Edge Function");return}catch(e){if(console.warn("Edge Function failed, falling back to REST API:",e.message),(f=e.message)!=null&&f.includes("Failed to fetch")||(p=e.message)!=null&&p.includes("ERR_NETWORK")||(d=e.message)!=null&&d.includes("TypeError")){console.log("Using REST API fallback approach...");try{const t=await fetch(`${i}/rest/v1/customer_profiles?user_id=eq.${a}&select=user_id`,{method:"GET",headers:{apikey:o,Authorization:`Bearer ${c||o}`,"Content-Type":"application/json"}}),s=await t.text();let r=!1;if(t.ok)try{const n=JSON.parse(s);r=Array.isArray(n)&&n.length>0}catch(n){console.warn("Error parsing check response:",n)}const g=r?"PATCH":"POST",h=r?`${i}/rest/v1/customer_profiles?user_id=eq.${a}`:`${i}/rest/v1/customer_profiles`,E=r?l:{user_id:a,...l,is_active:!0,email_notifications:!0,sms_notifications:!0,push_notifications:!0,marketing_emails:!1,email_verified:!1,phone_verified:!1},u=await fetch(h,{method:g,headers:{apikey:o,Authorization:`Bearer ${c||o}`,"Content-Type":"application/json",Prefer:"return=minimal"},body:JSON.stringify(E)});if(!u.ok){const n=await u.text();throw new Error(`REST API failed: HTTP ${u.status} - ${n}`)}console.log("Successfully updated customer profile via REST API fallback");return}catch(t){throw console.error("REST API fallback also failed:",t),new Error(`Both Edge Function and REST API failed. Edge Function: ${e.message}, REST API: ${t.message}`)}}else throw e}};export{T as updateCustomerProfileViaEdgeFunction};
